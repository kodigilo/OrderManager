openapi: 3.0.0
info:
  version: 1.0.0
  title: Contract First API
  termsOfService: "#"
  contact:
    email: gabriel@alencar.site
  license:
    name: Xxxxx
    url: http://#
paths:
  v1/item/pagination:
    get:
      tags:
        - ItemController
      summary: Pagination
      operationId: pagination
      parameters:
        - name: order
          in: query
          description: order
          required: false
          schema:
            type: string
            default: DESC
        - name: orderby
          in: query
          description: field to order by
          required: false
          schema:
            type: string
            enum:
              - id
              - name
            default: name
        - name: page
          in: query
          description: number of page
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: limit
          in: query
          description: rows per page
          required: false
          schema:
            type: integer
            format: int32
            default: 50
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginationItemResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  v1/item/all:
    get:
      tags:
        - ItemController
      summary: all
      operationId: all
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllItemResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  v1/item:
    post:
      tags:
        - ItemController
      summary: add
      operationId: add
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemPayload"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  v1/item/{id}:
    get:
      tags:
        - ItemController
      operationId: get
      parameters:
        - name: id
          in: path
          description: Item id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      tags:
        - ItemController
      summary: update
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Item"
      parameters:
        - name: id
          in: path
          description: Item id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - ItemController
      summary: delete
      operationId: delete
      parameters:
        - name: id
          in: path
          description: Item id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  v1/user/pagination:
    get:
      tags:
        - UserController
      summary: Pagination
      operationId: pagination
      parameters:
        - name: order
          in: query
          description: order
          required: false
          schema:
            type: string
            default: DESC
        - name: orderby
          in: query
          description: field to order by
          required: false
          schema:
            type: string
            enum:
              - id
              - name
            default: name
        - name: page
          in: query
          description: number of page
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: limit
          in: query
          description: rows per page
          required: false
          schema:
            type: integer
            format: int32
            default: 50
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginationUserResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  v1/user/all:
    get:
      tags:
        - UserController
      summary: all
      operationId: all
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllUserResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  v1/user:
    post:
      tags:
        - UserController
      summary: add
      operationId: add
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPayload"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  v1/user/{id}:
    get:
      tags:
        - UserController
      summary: get
      operationId: get
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      tags:
        - UserController
      summary: update
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - UserController
      summary: delete
      operationId: delete
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  v1/order/pagination:
    get:
      tags:
        - OrderController
      summary: Pagination
      operationId: pagination
      parameters:
        - name: order
          in: query
          description: order
          required: false
          schema:
            type: string
            default: DESC
        - name: orderby
          in: query
          description: field to order by
          required: false
          schema:
            type: string
            enum:
              - id
              - name
            default: name
        - name: page
          in: query
          description: number of page
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: limit
          in: query
          description: rows per page
          required: false
          schema:
            type: integer
            format: int32
            default: 50
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginationOrderResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  v1/order/all:
    get:
      tags:
        - OrderController
      summary: all
      operationId: all
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllOrderResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  v1/order:
    post:
      tags:
        - OrderController
      summary: add
      operationId: add
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderPayload"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  v1/order/{id}:
    get:
      tags:
        - OrderController
      summary: get
      operationId: get
      parameters:
        - name: id
          in: path
          description: Order id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      tags:
        - OrderController
      summary: update
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      parameters:
        - name: id
          in: path
          description: Order id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - OrderController
      summary: delete
      operationId: delete
      parameters:
        - name: id
          in: path
          description: Order id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  v1/stock-movement/pagination:
    get:
      tags:
        - StockMovementController
      summary: Pagination
      operationId: pagination
      parameters:
        - name: order
          in: query
          description: order
          required: false
          schema:
            type: string
            default: DESC
        - name: orderby
          in: query
          description: field to order by
          required: false
          schema:
            type: string
            enum:
              - id
              - name
            default: name
        - name: page
          in: query
          description: number of page
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: limit
          in: query
          description: rows per page
          required: false
          schema:
            type: integer
            format: int32
            default: 50
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginationStockMovementResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  v1/stock-movement/all:
    get:
      tags:
        - StockMovementController
      summary: all
      operationId: all
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllStockMovementResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  v1/stock-movement:
    post:
      tags:
        - StockMovementController
      summary: add
      operationId: add
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StockMovementPayload"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StockMovement"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  v1/stock-movement/{id}:
    get:
      tags:
        - StockMovementController
      summary: get
      operationId: get
      parameters:
        - name: id
          in: path
          description: StockMovement id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StockMovement"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      tags:
        - StockMovementController
      summary: update
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StockMovement"
      parameters:
        - name: id
          in: path
          description: StockMovement id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StockMovement"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - StockMovementController
      summary: delete
      operationId: delete
      parameters:
        - name: id
          in: path
          description: StockMovement id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StockMovement"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

servers:
  - url: https://localhost
  - url: http://localhost
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        status:
          type: string
          example: "401"
        message:
          type: string
          example: "Unauthorized"

    ItemPayload:
      type: object
      properties:
        name:
          type: string
          example: Xxxxxx
          required: true
    Item:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          example: 149467
          required: true
        name:
          type: string
          example: Xxxxxx
          required: true
    AllItemResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/Item"
    PaginationItemResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/Item"
        totalPages:
          type: integer
          format: int32
          example: 50
        totalElements:
          type: integer
          format: int64
          example: 9266
        size:
          type: integer
          format: int32
          example: 100
        number:
          type: integer
          format: int32
          example: 0

    UserPayload:
      required:
        - name
        - email
      type: object
      properties:
        name:
          type: string
        email:
          type: string
    User:
      type: object
      required:
        - email
        - name
      properties:
        id:
          type: integer
          example: 149467
          required: true
        name:
          type: string
          example: Xxxxxx
          required: true
        email:
          type: string
          example: email@email.com
          required: true
    AllUserResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/User"
    PaginationUserResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/User"
        totalPages:
          type: integer
          format: int32
          example: 50
        totalElements:
          type: integer
          format: int64
          example: 9266
        size:
          type: integer
          format: int32
          example: 100
        number:
          type: integer
          format: int32
          example: 0

    OrderPayload:
      required:
        - quantity
        - creationDate
      type: object
      properties:
        quantity:
          type: integer
        creationDate:
          type: string
          format: date-time
        id_item:
          type: integer
          format: int64
        id_user:
          type: integer
          format: int64
    Order:
      type: object
      required:
        - quantity
        - creationDate
        - id_item
        - id_user
      properties:
        id:
          type: integer
        quantity:
          type: integer
        creationDate:
          type: string
          format: date-time
        id_item:
          type: integer
          format: int64
        id_user:
          type: integer
          format: int64
    AllOrderResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/Order"
    PaginationOrderResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/Order"
        totalPages:
          type: integer
          format: int32
          example: 50
        totalElements:
          type: integer
          format: int64
          example: 9266
        size:
          type: integer
          format: int32
          example: 100
        number:
          type: integer
          format: int32
          example: 0

    StockMovementPayload:
      required:
        - name
        - email
      type: object
      properties:
        quantity:
          type: integer
        id_item:
          type: integer
          format: int64
        creationDate:
          type: string
          format: date-time
    StockMovement:
      type: object
      required:
        - quantity
        - creationDate
        - id_item
      properties:
        id:
          type: integer
          example: 149467
          required: true
        quantity:
          type: integer
        id_item:
          type: integer
          format: int64
        creationDate:
          type: string
          format: date-time
    AllStockMovementResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/StockMovement"
    PaginationStockMovementResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/StockMovement"
        totalPages:
          type: integer
          format: int32
          example: 50
        totalElements:
          type: integer
          format: int64
          example: 9266
        size:
          type: integer
          format: int32
          example: 100
        number:
          type: integer
          format: int32
          example: 0
